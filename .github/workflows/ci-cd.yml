name: CI/CD

on:
  push:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # Checkout repo
    - name: Checkout
      uses: actions/checkout@v4

    # Enable Qemu for multi-arch builds
    - name: Set up Qemu
      uses: docker/setup-buildx-action@v2

    # Docker Hub login
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build & push backend image
    - name: Build & push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}
          ${{ secrets.DOCKER_USERNAME }}/backend:latest

    # Set up kubectl
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # Configure kubeconfig (auto-detect base64 or YAML)
    - name: Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        if echo "${{ secrets.KUBE_CONFIG }}" | grep -q "apiVersion:"; then
          echo "Detected raw kubeconfig YAML"
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        else
          echo "Detected base64-encoded kubeconfig"
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
        fi
        chmod 600 $HOME/.kube/config
        echo "Kubeconfig configured successfully"

    # Debug cluster connection (new syntax, works on all kubectl versions)
    - name: Test Kubernetes connection
      run: |
        echo "Client Version:"
        kubectl version --client=true
        echo "Cluster Nodes:"
        kubectl get nodes

    # Update Kubernetes backend deployment & apply manifests
    - name: Update k8s images and deploy
      run: |
        kubectl -n myapp set image deployment/backend backend=${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }} --record || true
        # If first deploy, apply manifests
        kubectl apply -f k8s/namespace.yaml || true
        kubectl apply -f k8s/secret.yaml || true
        kubectl apply -f k8s/mysql-pvc.yaml || true
        kubectl apply -f k8s/mysql-deployment.yaml || true
        kubectl apply -f k8s/backend-deployment.yaml || true
        kubectl apply -f k8s/ingress.yaml || true

    # Wait for backend pod to be ready
    - name: Wait for backend pod to be ready
      run: |
        echo "Waiting for backend deployment to roll out..."
        kubectl -n myapp rollout status deployment/backend --timeout=120s
